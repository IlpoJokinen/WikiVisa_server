{"version":3,"sources":["assets/trophies/thirdPlace.svg","components/UI/MyDrawer.js","components/UI/Header.js","components/UI/NavBar.js","views/PlayPage/Index.js","components/UI/BlueCheckbox.js","components/UI/CategoryList.js","components/UI/BlueDivider.js","views/PlayPage/CreateGame.js","views/PlayPage/components/GameList.js","views/PlayPage/FindGame.js","views/MainMenu.js","components/UI/Timer.js","views/QuestionPage/components/QuestionInfoBox.js","views/QuestionPage/components/AnswerOption.js","views/QuestionPage/components/LockOption.js","views/QuestionPage/Index.js","views/RoundEndPage/components/AnswerInfoBox.js","views/RoundEndPage/components/RoundEndPlayer.js","views/RoundEndPage/components/RoundEndPlayerList.js","views/RoundEndPage/Index.js","views/GameEndPage/components/StandingsTrophy.js","views/GameEndPage/components/GameEndInfoBox.js","views/GameEndPage/components/GameEndPlayer.js","views/GameEndPage/components/GameEndPlayerList.js","views/GameEndPage/Index.js","views/LobbyPage/components/Player.js","views/LobbyPage/components/PlayerList.js","views/LobbyPage/Index.js","components/UI/Chat/ChatTextField.js","components/UI/Chat/Message.js","components/UI/Chat/Chat.js","views/Game.js","App.js","serviceWorker.js","index.js","assets/trophies/firstPlace.svg","assets/wikipedia_white_logo.png","assets/trophies/secondPlace.svg"],"names":["module","exports","MyDrawer","view","setOpenStatus","setView","openStatus","classes","makeStyles","theme","drawerPaper","backgroundColor","width","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","listItemText","fontFamily","color","textAlign","listItem","marginBottom","listItemActive","backIcon","useStyles","Drawer","open","className","drawer","variant","anchor","paper","ModalProps","keepMounted","IconButton","onClick","Divider","List","name","url","state","map","obj","index","ListItem","button","key","ListItemText","primary","Header","props","styles","hasOwnProperty","Object","assign","style","HeadingValue","size","children","NavBar","title","toggle","previousButton","menuButton","marginRight","appBar","AppBar","position","Toolbar","aria-label","edge","Menu","margin","white","inline","CustomGridItem","withStyles","root","breakpoints","down","height","up","Grid","WelcomePage","setGamertag","gamertag","createGame","useState","tag","setTag","gridTest","marginTop","container","item","xs","md","Container","maxWidth","src","WikipediaWhiteLogo","TextField","value","label","disabled","length","fullWidth","onChange","e","target","Button","localStorage","removeItem","data","string","toString","alert","setItem","saveGamertag","type","startIcon","DoubleArrow","Search","Build","BlueCheckbox","id","htmlFor","CategoryList","selectedCategories","setSelectedCategories","categories","setCategories","useEffect","fetchCategories","mounted","fetch","then","res","json","catch","console","log","category","i","sm","prettyName","categoryId","exists","find","filter","addToSelectedCategories","BlueDivider","textCenter","Box","blueText","backdrop","zIndex","CreateGame","setRoomCode","loadingState","question","count","counters","answer","roundEnd","maxPlayers","visibility","losePoints","pointsForSpeed","gameProperties","setGameProperties","disableGutters","m","Slider","event","aria-labelledby","valueLabelDisplay","step","marks","min","max","Input","inputProps","FormControlLabel","control","Switch","ChevronRight","Backdrop","CircularProgress","GameList","games","joinGame","game","dense","divider","component","Typography","roomCode","secondary","Chip","icon","Person","currentPlayers","avatar","Avatar","join","ListItemSecondaryAction","PlayCircleOutlineRounded","document","FindGame","fetchGames","maximumQuestionCount","setMaximumQuestionCount","paddingLeft","HighlightOff","MainMenu","socket","setShowBackButton","setGames","setLoadingState","emit","roomcodeGiven","undefined","filters","on","errorMsg","getPage","Timer","timeRemaining","timer","setTimer","divStyle","border","borderRadius","textStyle","paddingTop","fontSize","setTimeout","QuestionInfoBox","questionCount","questionIndex","AnswerOption","option","setAnswer","setAnswerGiven","LockOption","locked","setLocked","setReady","answerGiven","pointerEvents","QuestionView","players","playersReady","setPlayersReady","paddingBottom","num","p","ready","answerOptionComponents","choices","choice","LinearProgress","AnswerInfoBox","answers","correctAnswer","noAnswer","answerTitle","RoundEndPlayer","isCurrentPlayer","rank","pointsAdded","points","ListItemIcon","Face","disableTypography","paddingRight","whiteSpace","overflow","textOverflow","marginLeft","RoundEndPlayerList","sort","a","b","player","RoundEndView","flexGrow","palette","text","standings","StandingsTrophy","standing","imageStyle","image","firstPlaceTrophy","secondPlaceTrophy","thirdPlaceTrophy","alt","getImage","GameEndInfoBox","firstPlace","secondPlace","thirdPlace","window","location","reload","GameEndPlayer","GameEndPlayerList","slice","GameEnd","Player","lobbyReady","inset","Done","opacity","PlayerList","Lobby","startGame","started","isCreator","setPlayerReadyLobby","chat","gameType","TimerWrapper","justify","DoneOutline","PlayCircleFilled","ChatTextField","sendMessage","message","setMessage","multiline","handleClick","endIcon","Send","Message","ownMessage","align","Card","CardContent","concat","gutterBottom","Chat","messages","setMessages","chatBoxElement","getElementsByClassName","scrollTo","scrollHeight","messageComponents","Game","getGame","setGame","setCorrectAnswer","setAnswerAndPlayerReady","game_id","question_id","getPlayersAnswers","forEach","answeredThisRound","prevState","timerName","keys","questionCounter","roundEndCounter","nextQuestion","currentQuestionIndex","startGameCounter","creator","numberOfQuestions","io","process","App","showBackButton","showGame","toggleGame","pageTitle","getItem","backPageButton","ArrowBack","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ec521bd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thirdPlace.64756e39.svg\";","import React from 'react'\nimport { Drawer, Divider, List, ListItem, ListItemText, IconButton, makeStyles } from '@material-ui/core/'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\nconst MyDrawer = ({view, setOpenStatus, setView, openStatus}) => {\n    const drawerWidth = 240\n    const useStyles = makeStyles((theme) => ({\n        drawerPaper: {\n            backgroundColor: '#6674AD',\n            width: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        listItemText: {\n            fontFamily: 'IBM Plex Sans',\n            color: 'white',\n            textAlign : 'center'\n        },\n        listItem: {\n            marginBottom: 10\n        },\n        listItemActive: {\n            marginBottom: 10,\n            backgroundColor: 'rgba(255,255,255,0.3)'\n        },\n        backIcon: {\n            color: 'white'\n        }\n    }))\n    const classes = useStyles()\n    const changePage = url => {\n        setOpenStatus(!openStatus)\n        setView(url)\n    }\n    return <Drawer\n        open={openStatus}\n        className={classes.drawer}\n        variant={'persistent'}\n        anchor={'left'}\n        classes={{\n            paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n            keepMounted: true\n        }}>\n        <div className={classes.drawerHeader}>\n            <IconButton onClick={() => setOpenStatus(false)}>\n                <ChevronLeftIcon className={classes.backIcon} />\n            </IconButton>\n        </div>\n        <Divider />\n        <List>\n            {\n                [{name: 'Play Game', url: 'play', state: true}, \n                {name: 'Statistics', url: 'statistics', state: false}, \n                {name: 'Profile', url: 'profile', state: false}, \n                {name: 'Sign In & Sign Up', url: 'login', state: false}\n            ].map((obj, index) => obj.state \n                ? <ListItem button onClick={() => changePage(obj.url)} key={index} className={view === obj.url ? classes.listItemActive : classes.listItem}>\n                    <ListItemText  className={classes.listItemText} primary={obj.name} /> \n                </ListItem>\n                : ''\n                )\n            }\n        </List>\n    </Drawer>\n}\nexport default MyDrawer","import React from 'react'\n\nconst Header = props => {\n    let styles = {\n        color: props.hasOwnProperty('white') ? '#ffffff' : '#879DFA', \n        display: props.hasOwnProperty('inline') ? 'inline' : 'initial'\n    }\n    if(props.hasOwnProperty('style')) {\n        styles = Object.assign({}, styles, props.style)\n    }\n    const HeadingValue = `h${props.hasOwnProperty(\"size\") ? props.size : 2}`\n    return <HeadingValue style={styles}>{props.children}</HeadingValue>\n}\n\nexport default Header","import React from 'react'\nimport { AppBar, Toolbar, IconButton, makeStyles } from '@material-ui/core'\nimport Header from './Header'\nimport { Menu } from '@material-ui/icons/'\n\nconst NavBar = ({ title, toggle, previousButton }) => {\n    const useStyles = makeStyles((theme) => ({\n        menuButton: {\n            marginRight: theme.spacing(2)\n        },\n        toolbar: theme.mixins.toolbar,\n        appBar: {\n            backgroundColor: '#6674AD'\n        }\n    }))\n    const classes = useStyles()\n    return <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"Open Drawer\"\n                edge=\"start\"\n                onClick={() => toggle()} \n                className={classes.menuButton}>\n                <Menu />\n            </IconButton>\n            { previousButton }\n            <Header style={{margin: 0}} size={4} white inline>\n                { title }\n            </Header>\n        </Toolbar>\n    </AppBar>\n}\n\nexport default NavBar","import React, { useState } from 'react'\nimport { Grid, withStyles, Container, TextField, Button, makeStyles } from '@material-ui/core/'\nimport { Build, DoubleArrow, Search } from '@material-ui/icons/'\nimport Header from '../../components/UI/Header'\nimport WikipediaWhiteLogo from '../../assets/wikipedia_white_logo.png'\n\nconst CustomGridItem = withStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto'\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '100%'\n        }\n    },\n}))(Grid)\n\nconst WelcomePage = ({setView, setGamertag, gamertag, createGame}) => {\n    const [tag, setTag] = useState(\"\")\n    const deleteGamertag = () => {\n        setTag(\"\")\n        setGamertag(\"\")\n        localStorage.removeItem(\"gamertag\")\n    }\n    const saveGamertag = data => {\n        let string = data.toString()\n        if(string.length > 30) {\n            alert(\"Gamertag is too long. Gamertag's max length is 30 characters.\")\n            return false\n        }\n        if(string.length > 0 && string.length <= 30) {\n            localStorage.setItem(\"gamertag\", string)\n            setGamertag(string)\n        }\n    }\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            marginBottom: theme.spacing(2)\n        },\n        gridTest: {\n            [theme.breakpoints.down('sm')]: {\n                marginTop: '50px',\n                marginBottom: '50px'\n            },\n            [theme.breakpoints.up('md')]: {\n                marginTop: '80px'\n            }\n        },\n    }))\n    const classes = useStyles()\n    return <Grid container style={{height: 'calc(100% - 64px)'}}>\n        <CustomGridItem style={{backgroundColor: '#879DFA', color: '#ffffff'}} item xs={12} md={7}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                <Grid container>\n                    <Grid xs={12} item style={{marginBottom: 10}}>\n                        <Header white size={1}>Welcome to WikiVisa!</Header>\n                    </Grid>\n                    <Grid xs={12} item>\n                        <p>\n                            Questions are created using our question generator which utilizes Wikipedia's wikidata api for generating it's choices.  \n                        </p>\n                        <p>\n                            Powered by\n                            <img style={{maxWidth: 220, width: '100%'}} src={WikipediaWhiteLogo} />\n                        </p>\n                    </Grid>\n                </Grid>\n            </Container>\n        </CustomGridItem>\n        <CustomGridItem item xs={12} md={5}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                <Grid container spacing={3}>\n                    <Grid xs={12} item>\n                        <Grid container spacing={2}>\n                            <Grid xs={12} item>\n                                <Header size={2}>Set Your Gamertag</Header>\n                            </Grid>\n                            <Grid xs={12} item>\n                                <TextField \n                                    value={tag}\n                                    label={gamertag ? gamertag : \"Give Gamertag\" }\n                                    variant=\"outlined\"\n                                    disabled={gamertag.length > 0}\n                                    fullWidth\n                                    onChange={e => setTag(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid xs={12} item>\n                                <Button\n                                    variant=\"contained\"\n                                    color={gamertag ? \"secondary\" : \"primary\"}\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.button}\n                                    onClick={gamertag \n                                        ? () => deleteGamertag() \n                                        : () => saveGamertag(tag)}\n                                >{gamertag ? 'Reset Gamertag' : 'Set Gamertag'}</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid xs={12} item>\n                        <Grid container spacing={2}>\n                            <Grid xs={12} item>\n                                <Header size={2}>How would you like to play?</Header>\n                            </Grid>\n                            <Grid xs={12} item>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.button}\n                                    onClick={() => createGame({type: 'quick'})}\n                                    startIcon={<DoubleArrow />}\n                                >Quick Game</Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.button}\n                                    onClick={() => setView('play_find')}\n                                    startIcon={<Search />}\n                                >Find Game</Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    size=\"large\"\n                                    className={classes.button}\n                                    onClick={() => setView('play_create')}\n                                    startIcon={<Build />}\n                                >Create Game</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </CustomGridItem>\n    </Grid>\n}\n\nexport default WelcomePage","import React from 'react'\n\nconst BlueCheckbox = props => {\n    return <div className=\"checkboxButton\">\n        <input onClick={props.onClick} type=\"checkbox\" id={props.name} />\n        <label htmlFor={props.name}>{ props.label }</label>\n    </div>\n}\n\nexport default BlueCheckbox","import React, { useState, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport BlueCheckbox from './BlueCheckbox'\n\nconst CategoryList = ({ selectedCategories, setSelectedCategories }) => {\n    const [categories, setCategories] = useState([])\n    useEffect(() => fetchCategories(), [])\n    useEffect(() => {\n        if(!selectedCategories.length) {\n            setCategories(categories)\n        }\n    }, [selectedCategories])\n    const fetchCategories = () => {\n        let mounted = true\n        fetch((process.env.REACT_APP_SOCKET_URL || 'http://localhost:3001') + 'api/categories')\n        .then(res => res.json())\n        .then(data => {\n            if (mounted){\n                setCategories(data)\n            }\n        }).catch(console.log)\n        return () => mounted = false\n    }\n    const addToSelectedCategories = categoryId => {\n        let exists = selectedCategories.find((id) => id === categoryId)\n        if(exists) {\n            setSelectedCategories(selectedCategories.filter((id) => { \n                return id !== categoryId \n            }))\n        } else {\n            setSelectedCategories([...selectedCategories, categoryId])\n        }        \n    }\n    return <Grid container spacing={2} className=\"questionCategoriesCheckboxList\">\n        { categories.length ?\n            categories.map((category, i) => {\n                return <Grid item xs={6} sm={6} md={4} key={i}>\n                    <BlueCheckbox label={category.prettyName} name={`category-${i}`} onClick={() => addToSelectedCategories(category.id)} /> \n                </Grid>\n            }) : <Grid item >No Categories Found</Grid>\n        }\n    </Grid>\n}\n\nexport default CategoryList","import React from 'react'\nimport Box from '@material-ui/core/Box'\n\nconst BlueDivider = props => {\n    let textCenter = props.hasOwnProperty('textCenter') ? 'center' : 'left'\n    return <Box className=\"blueDivider\" style={{textAlign: textCenter}}>\n        { props.children }\n    </Box>\n}\n\nexport default BlueDivider","import React, { useState, useEffect } from 'react'\nimport { Grid, Box, Input, TextField, Button, FormControlLabel, Switch, Container, Slider, makeStyles, Backdrop} from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { ChevronRight } from '@material-ui/icons/'\nimport CategoryList from '../../components/UI/CategoryList'\nimport Header from '../../components/UI/Header'\nimport BlueDivider from '../../components/UI/BlueDivider'\n\nconst blueText = {\n    fontFamily: 'IBM Plex Sans',\n    color: '#879DFA'\n}\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n}))\n\nconst CreateGame = ({createGame, setRoomCode, loadingState}) => {\n    const [selectedCategories, setSelectedCategories] = useState([])\n    const [gameProperties, setGameProperties] = useState({\n        type: 'custom',\n        question: {\n            categories: [],\n            count: 5\n        },\n        counters: {\n            answer: 10,\n            roundEnd: 10\n        },\n        maxPlayers: 6,\n        visibility: false,\n        losePoints: false,\n        pointsForSpeed: false\n    })\n    useEffect(() => {\n        setGameProperties({...gameProperties, question: {...gameProperties.question, categories: selectedCategories}})\n    },[selectedCategories])\n    const classes = useStyles()\n    return <Container maxWidth={false} disableGutters>\n        <BlueDivider textCenter>Setup your personal game</BlueDivider>\n        <Box m={2}>\n            <Grid container spacing={4}>\n                <Grid item xs={12}>\n                    <Header size={4}>Enter Roomcode</Header>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField label={'Type a Room Code'} variant=\"outlined\" fullWidth onChange={e => setRoomCode(e.target.value)} />\n                </Grid>\n            </Grid>\n        </Box>\n        <Box m={2}>\n            <Grid container spacing={4}>\n                <Grid item sm={6} xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}><Header size={4}>Basic Settings</Header></Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}><Header size={6}>Categories in a Game</Header></Grid>\n                                <Grid item xs={12}>\n                                    <CategoryList\n                                        selectedCategories={selectedCategories} \n                                        setSelectedCategories={setSelectedCategories}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}><Header size={6}>Question Count: {gameProperties.question.count}</Header></Grid>\n                                <Grid item xs={12}>\n                                    <Slider\n                                        value={gameProperties.question.count}\n                                        onChange={(event, value) => setGameProperties({...gameProperties, question: {...gameProperties.question, count: value}})}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"auto\"\n                                        step={1}\n                                        marks\n                                        min={1}\n                                        max={30}\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}><Header size={6}>Answer Time: {gameProperties.counters.answer}</Header></Grid>\n                                <Grid item xs={12}>\n                                    <Slider\n                                        value={gameProperties.counters.answer}\n                                        onChange={(event, value) => setGameProperties({...gameProperties, counters: {...gameProperties.counters, answer: value }})}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"auto\"\n                                        step={1}\n                                        marks\n                                        min={1}\n                                        max={30}\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}><Header size={6}>Round End Time: {gameProperties.counters.roundEnd}</Header></Grid>\n                                <Grid item xs={12}>\n                                    <Slider\n                                        value={gameProperties.counters.roundEnd}\n                                        onChange={(event, value) => setGameProperties({...gameProperties, counters: {...gameProperties.counters, roundEnd: value }})}\n                                        aria-labelledby=\"discrete-slider\"\n                                        valueLabelDisplay=\"auto\"\n                                        step={1}\n                                        marks\n                                        min={1}\n                                        max={30}\n                                    />\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}><Header size={4}>Advanced Settings</Header></Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}><Header size={6}>Max Players</Header></Grid>\n                                <Grid item xs={12}>\n                                    <Input type=\"number\" value={gameProperties.maxPlayers} onChange={e => setGameProperties({...gameProperties, maxPlayers: e.target.value})} inputProps={{ 'aria-label': 'Max Players' }} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}><Header size={6}>Visibility</Header></Grid>\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                onChange={e => setGameProperties({...gameProperties, visibility: !gameProperties.visibility})}\n                                                name=\"visibility\"\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        style={blueText}\n                                        label={gameProperties.visibility ? 'Game will be public' : 'Game will be private'}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}><Header size={6}>Lose points on incorrect answers</Header></Grid>\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                onChange={e => setGameProperties({...gameProperties, losePoints: !gameProperties.losePoints})}\n                                                name=\"losePoints\"\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        style={blueText}\n                                        label= {gameProperties.losePoints ? 'Player will lose points' : 'Player will not lose points'}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}><Header size={6}>Extra points based on speed</Header> </Grid>\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                onChange={e => setGameProperties({...gameProperties, pointsForSpeed: !gameProperties.pointsForSpeed})}\n                                                name=\"pointsForSpeed\"\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        style={blueText}\n                                        label={gameProperties.pointsForSpeed ? 'Player will get extra points' : 'Player will not get extra points'}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n        <Box m={2}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                onClick={() => createGame(gameProperties)}\n                startIcon={<ChevronRight />}\n            >Create & Join</Button>\n        </Box>\n        <Backdrop className={classes.backdrop} open={loadingState}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    </Container>\n}\n\nexport default CreateGame","import React from 'react'\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Typography, Chip, Avatar } from '@material-ui/core/'\nimport { PlayCircleOutlineRounded, Person } from '@material-ui/icons/'\n\nconst GameList = ({ games, joinGame }) => {\n    return <List className=\"gameList\">\n    {\n        games.length ? \n            games.map((game, i) => {\n                return <ListItem key={i} dense button divider>\n                    <ListItemText \n                        component=\"div\"\n                        primary={<Typography>Room {game.roomCode}</Typography>} \n                        secondary={<Typography component={'span'}>\n                            <Chip \n                                component=\"span\"\n                                icon={<Person />} \n                                size=\"small\"\n                                label={game.currentPlayers + \" | \" + game.maxPlayers }\n                                style={{marginRight: 5}} \n                            /> \n                            <Chip \n                                component=\"span\"\n                                avatar={<Avatar>C</Avatar>}\n                                size=\"small\"\n                                label={game.categories.join(\", \")}\n                            />\n                        </Typography>} \n                    />  \n                    <ListItemSecondaryAction>\n                        <IconButton aria-label=\"Join Game\" onClick={() => joinGame(game.roomCode)}>\n                            <PlayCircleOutlineRounded />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            })\n        : <ListItem key={0} dense>\n            <ListItemText \n                primary={<Typography>No Games Found</Typography>} \n            />\n        </ListItem>\n    }\n</List>\n}\n\nexport default GameList","import React, { useState } from 'react'\nimport { Container, Box, TextField, Grid, Slider, Button, makeStyles, Backdrop } from '@material-ui/core/'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { ChevronRight, Search, HighlightOff } from '@material-ui/icons/'\nimport CategoryList from '../../components/UI/CategoryList'\nimport GameList from './components/GameList'\nimport BlueDivider from '../../components/UI/BlueDivider'\nimport Header from '../../components/UI/Header'\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }\n}))\n\ndocument.title = 'Find Game'\n\nconst FindGame = ({ joinGame, loadingState, fetchGames, games, setRoomCode }) => {\n    const [maximumQuestionCount, setMaximumQuestionCount] = useState(30)\n    const [selectedCategories, setSelectedCategories] = useState([])\n    const classes = useStyles()\n    function resetFilters() {\n        setMaximumQuestionCount(30)\n        setSelectedCategories([])\n    }\n    return <Container maxWidth={false} disableGutters>\n        <BlueDivider>Join By Room Code</BlueDivider>\n        <Box m={2}>\n            <Grid container spacing={2}>\n                <Grid xs={12} item>\n                    <Header size={3}>Type a Room Code</Header>\n                </Grid>\n                <Grid xs={12} item>\n                    <TextField id=\"roomCodeTextField\" onChange={e => setRoomCode(e.target.value)} fullWidth label=\"Type a Room Code\" variant=\"outlined\"/>\n                </Grid>\n                <Grid xs={12} item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={() => joinGame()}\n                        startIcon={<ChevronRight />}\n                    >Join Game</Button>\n                </Grid>\n            </Grid>\n        </Box>\n        <BlueDivider>Search a Game</BlueDivider>\n        <Box m={2}>\n            <Grid container spacing={4}>\n                <Grid xs={12} sm={7} item>\n                    <Grid container spacing={2}>\n                        <Grid xs={12} item>\n                            <Header size={3}>Categories in a Game</Header>\n                        </Grid>\n                        <Grid xs={12} item>\n                            <CategoryList \n                                selectedCategories={selectedCategories} \n                                setSelectedCategories={setSelectedCategories} \n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid xs={12} sm={5} item>\n                    <Grid container spacing={2}>\n                        <Grid xs={12} item>\n                            <Header size={3}>Maximum Count of Questions: {maximumQuestionCount}</Header>\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Container style={{paddingLeft: 0}}>\n                                <Slider\n                                    value={maximumQuestionCount}\n                                    onChange={(e, value) => setMaximumQuestionCount(value)}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    step={1}\n                                    marks\n                                    min={1}\n                                    max={30}\n                                />\n                            </Container>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n        <Box m={2}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={() => fetchGames({\n                            maximumQuestionCount: maximumQuestionCount,\n                            selectedCategories: selectedCategories\n                        })}\n                        startIcon={<Search />}\n                    >Find Games</Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={() => resetFilters()}\n                        startIcon={<HighlightOff />}\n                    >Reset Filters</Button>\n                </Grid>\n            </Grid>\n            \n            \n        </Box>\n        <Box m={2}>\n            { games.length ? <GameList games={games} joinGame={joinGame} /> : '' }\n        </Box>\n        <Backdrop className={classes.backdrop} open={loadingState}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    </Container>\n}\n\nexport default FindGame","import React, { useState, useEffect } from 'react'\nimport WelcomePage from './PlayPage/Index'\nimport CreateGame from './PlayPage/CreateGame'\nimport FindGamePage from './PlayPage/FindGame'\n\ndocument.title = 'Welcome to WikiVisa!'\n\nconst MainMenu = ({ socket, view, setView, setGamertag, gamertag, setShowBackButton }) => {\n    const [roomCode, setRoomCode] = useState('')\n    const [games, setGames] = useState([])\n    const [loadingState, setLoadingState] = useState(false)\n    useEffect(() => {\n        socket.on(\"send games\", data => {\n            setGames(data)\n            setLoadingState(false)\n        })\n        socket.on(\"error while joining\", errorMsg => {\n            setLoadingState(false)\n            alert(errorMsg)\n        })\n    }, [])\n    function createGame(gameProperties) {\n        setLoadingState(true)\n        socket.emit('create game', { gamertag, roomCode, gameProperties })\n    }\n    function joinGame(roomcodeGiven = undefined) {\n        setLoadingState(true)\n        if(roomcodeGiven === undefined) {\n            socket.emit(\"join game\", { gamertag, roomCode })\n        } else {\n            socket.emit(\"join game\", { gamertag, roomCode: roomcodeGiven })\n        }\n    }\n    function fetchGames(filters) {\n        setLoadingState(true)\n        socket.emit(\"get games\", filters)\n    }\n    const getPage = () => {\n        setShowBackButton(false)\n        switch(view){\n            case 'play_create': \n                setShowBackButton(true)\n                return <CreateGame createGame={createGame} setRoomCode={setRoomCode} loadingState={loadingState} />\n            case 'play_find': \n                setShowBackButton(true)\n                return <FindGamePage joinGame={joinGame} setRoomCode={setRoomCode} fetchGames={fetchGames} loadingState={loadingState} games={games} />\n            default: return <WelcomePage setView={setView} createGame={createGame} gamertag={gamertag} setGamertag={setGamertag} />\n        }\n    }\n    return getPage()\n}\n\nexport default MainMenu","import React, { useEffect, useState } from 'react'\n\nconst Timer = ({ color, timeRemaining }) => {\n\n    const [timer,  setTimer] = useState(timeRemaining)\n\n    const divStyle = {\n        margin: '0 auto',\n        width: '70px',\n        height: '70px',\n        border: `2px solid ${color}`,\n        borderRadius: '50%',\n    }\n    \n    const textStyle = {\n        paddingTop: '20px',\n        textAlign: 'center',\n        color: color,\n        fontSize: '20px',\n    }\n\n    useEffect(() => {\n        let mounted = true\n        setTimeout(() => {\n            if(timer > 0 && mounted){\n                setTimer(timer - 1)\n            }\n        }, 1000)\n        return () => mounted = false\n    }, [timer])\n\n    return <div style={divStyle}>\n        <h4 style={textStyle}>{timer}</h4>\n    </div>\n}\n\nexport default Timer","import React from 'react'\nimport Timer from '../../../components/UI/Timer'\nimport Header from '../../../components/UI/Header'\nimport { Box } from '@material-ui/core/'\n\nconst QuestionInfoBox = ({ question, questionCount, timeRemaining, questionIndex }) => {\n   \n    return (\n        <Box style={{textAlign: \"center\"}}>\n            <Box m={2}><Timer color={\"#fff\"} timeRemaining={timeRemaining}/></Box>\n            <Box m={2}><Header white size={6}>{questionIndex}/{questionCount}</Header></Box>\n            <Box m={2}><Header white size={3}>{question}</Header></Box>\n        </Box>\n    )\n}\n\nexport default QuestionInfoBox\n","import React from 'react'\nimport '../../../style.css'\n \nconst AnswerOption = ({ option, setAnswer, value, setAnswerGiven }) => {\n    const id = option\n\n    function handleClick() {\n        setAnswer({value: value, name: option})\n        setAnswerGiven(true)\n    }\n\n    return <div className=\"radioButton\">\n            <input onClick={() => handleClick()} id={id} value={option} type=\"radio\" name=\"option\"/>\n            <label htmlFor={id}>{option}</label>\n        </div>\n    }\n \nexport default AnswerOption\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n\nconst LockOption = ({ locked, setLocked, setReady, answerGiven }) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                color: '#879DFA',\n                fontFamily: 'IBM Plex Sans',\n                border: '2px solid #A3B4FF',\n                marginTop: '20px',\n                padding: '8px 20px',\n            }\n        },\n    }))\n\n    const classes = useStyles()\n    const divStyle = {\n        textAlign: 'center'\n    }\n\n    if(locked || !answerGiven) {\n        return <div style={divStyle} className={classes.root}>\n            <Button style={{pointerEvents: \"none\"}} variant=\"outlined\">{answerGiven ? \"Submitted!\" : \"Choose Answer\"}</Button>\n        </div>\n    } else {\n        return <div style={divStyle} className={classes.root}>\n            <Button onClick={() => {setLocked(true); setReady()}} variant=\"outlined\">Submit Answer</Button>\n        </div>\n    }\n}\n\nexport default LockOption","import React, { useState, useEffect } from 'react'\nimport QuestionInfoBox from './components/QuestionInfoBox'\nimport AnswerOption from './components/AnswerOption'\nimport LockOption from './components/LockOption'\nimport { Grid, withStyles, Container, LinearProgress, makeStyles } from '@material-ui/core/'\n\nconst CustomGridItem = withStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto'\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '100%'\n        }\n    },\n}))(Grid)\n\nconst QuestionView = ({ setAnswer, timer, question, players, setReady, questionCount, questionIndex }) => {\n    const [playersReady, setPlayersReady] = useState(0)\n    const [locked, setLocked] = useState(false)\n    const [answerGiven, setAnswerGiven] = useState(false)\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            marginBottom: theme.spacing(2)\n        },\n        gridTest: {\n            [theme.breakpoints.down('sm')]: {\n                marginTop: '50px',\n                paddingBottom: '50px'\n            },\n            [theme.breakpoints.up('md')]: {\n                marginTop: '80px'\n            }\n        },\n    }))\n    document.title = question.title.toString()\n\n    useEffect(() => {\n        let num = players.filter(p => p.ready === true).length\n        setPlayersReady(num)\n    }, [players])\n\n    let answerOptionComponents = question.choices.map((choice, i) => {\n        return <AnswerOption setAnswerGiven={setAnswerGiven} key={i} setAnswer={setAnswer} option={choice} value={i}/>\n    })\n\n    const classes = useStyles()\n\n    return <Grid container style={{height: '100%'}}>\n        <CustomGridItem style={{backgroundColor: '#879DFA', color: '#ffffff'}} item xs={12} md={7}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                <QuestionInfoBox timeRemaining={timer} questionIndex={questionIndex} question={question.title} questionCount={questionCount}/>\n            </Container>\n        </CustomGridItem>\n        <CustomGridItem item xs={12} md={5}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                {answerOptionComponents}\n                <LinearProgress variant=\"determinate\" value={playersReady / players.length * 100} />\n                <LockOption locked={locked} setLocked={setLocked} setReady={setReady} answerGiven={answerGiven}/>\n            </Container>\n        </CustomGridItem>\n    </Grid>\n}\n\nexport default QuestionView","import React from 'react'\nimport Timer from '../../../components/UI/Timer'\nimport Header from '../../../components/UI/Header'\nimport { Box } from '@material-ui/core/'\n\nconst AnswerInfoBox = ({ answers, correctAnswer, timer, gamertag }) => {\n    return <Box style={{textAlign: \"center\"}}>\n        <Box m={2}><Timer color={\"#fff\"} timeRemaining={timer}/></Box>\n        <Box m={2}>{correctAnswer.value === answers[gamertag].value \n            ? <Header size={3}white >Your answer was correct</Header>\n            : answers[gamertag].noAnswer ? <Header size={3}white>You didn't give any answer</Header> : <Header size={3}white>Your answer <strong>{answers[gamertag].name}</strong> was incorrect</Header>\n            }</Box>\n        <Box m={2}><Header size={4} white>{correctAnswer.answerTitle} <strong>{correctAnswer.name}</strong></Header></Box>\n    </Box>\n}\n\nexport default AnswerInfoBox","import React from 'react'\nimport { ListItem, ListItemIcon, ListItemText, Avatar, Chip } from '@material-ui/core/'\nimport { Face } from '@material-ui/icons/'\n\nconst RoundEndPlayer = ({ gamertag, isCurrentPlayer, rank, pointsAdded, points }) => {\n    return <ListItem divider>\n    {\n        <ListItemIcon>\n            { isCurrentPlayer ? <Face/> \n            : <Avatar style={{\n                width: 24,\n                height: 24,\n            }}>{rank}</Avatar> \n            }\n        </ListItemIcon>\n    }\n    <ListItemText \n        disableTypography={true}\n        component=\"div\"\n        primary={<div style={{display: 'flex'}}>\n            <span style={{\n                margin: \"0 20px 0 0\",\n                paddingRight: 5,\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n            }}>{gamertag}</span>\n            <span style={{marginLeft: 'auto'}}>\n                <Chip\n                    component=\"span\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    label={points + \" points\"}\n                />\n                { pointsAdded !== 0 ?\n                    <Chip \n                        style={{marginLeft: 5, backgroundColor: pointsAdded > 0 ? '#60FA9F' : '#EB7972'}} \n                        component=\"span\"\n                        size=\"small\"\n                        label={(pointsAdded > 0 ? '+ ' : '') + pointsAdded}\n                    />\n                    : '' }\n            </span>\n            \n        </div>} \n    />  \n    </ListItem>\n}\nexport default RoundEndPlayer","import React from 'react'\nimport { List } from '@material-ui/core'\nimport RoundEndPlayer from './RoundEndPlayer'\n\nconst RoundEndPlayerList = ({ players, gamertag }) => {\n    \n    return <List>\n        {\n            players\n            .sort((a, b) => b.points - a.points)\n            .map((player, i) => <RoundEndPlayer \n                key={i}\n                rank={i + 1} \n                isCurrentPlayer={gamertag === player.gamertag} \n                points={player.points} \n                pointsAdded={player.pointsAdded} \n                gamertag={player.gamertag}/>\n            )    \n        }\n    </List>\n}\n\nexport default RoundEndPlayerList","import React from 'react'\nimport AnswerInfoBox from './components/AnswerInfoBox'\nimport { Grid, withStyles, Container, makeStyles } from '@material-ui/core/'\nimport RoundEndPlayerList from \"./components/RoundEndPlayerList\"\n\nconst CustomGridItem = withStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto'\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '100%'\n        }\n    },\n}))(Grid)\n\nconst RoundEndView = ({answers, gamertag, timer, correctAnswer, players}) => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          flexGrow: 1,\n        },\n        paper: {\n          padding: theme.spacing(2),\n          textAlign: 'center',\n          color: theme.palette.text.secondary,\n        },\n        standings: {\n            textAlign: 'center',\n        },\n        button: {\n            marginBottom: theme.spacing(2)\n        },\n        gridTest: {\n            [theme.breakpoints.down('sm')]: {\n                marginTop: '50px'\n            },\n            [theme.breakpoints.up('md')]: {\n                marginTop: '80px'\n            }\n        },\n    }))\n    const classes = useStyles()\n\n    function getBackgroundColor() {\n        let backgroundColor = \"\"\n        if(correctAnswer.value === answers[gamertag].value) {\n            backgroundColor = \"#60FA9F\"\n        } else if (answers[gamertag].noAnswer) {\n            backgroundColor = '#879DFA'\n        } else {\n            backgroundColor = \"#EB7972\"\n        }\n        return backgroundColor\n    }\n\n    return <Grid container style={{height: '100%'}}>\n        <CustomGridItem style={{backgroundColor: getBackgroundColor(), color: '#ffffff'}} item xs={12} md={7}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                <AnswerInfoBox gamertag={gamertag} answers={answers} correctAnswer={correctAnswer} timer={timer}/>\n            </Container>\n        </CustomGridItem>\n        <CustomGridItem item xs={12} md={5}>\n            <Container maxWidth=\"xs\" className={classes.gridTest}>\n                <RoundEndPlayerList gamertag={gamertag} players={players}/>\n            </Container>\n        </CustomGridItem>\n    </Grid>                    \n}\nexport default RoundEndView","import React from 'react'\nimport firstPlaceTrophy from '../../../assets/trophies/firstPlace.svg'\nimport secondPlaceTrophy from '../../../assets/trophies/secondPlace.svg'\nimport thirdPlaceTrophy from '../../../assets/trophies/thirdPlace.svg'\nimport Header from \"../../../components/UI/Header\"\n\nconst StandingsTrophy = ({ standing, player }) => {\n    const imageStyle = {\n        width: 70,\n        height: 70,\n        display: \"block\",\n        margin: \"0 auto 10px auto\"\n    }\n    const getImage = () => {\n        let image;\n        switch(standing) {\n            case 1:  image = firstPlaceTrophy; break;\n            case 2:  image = secondPlaceTrophy; break;\n            case 3:  image = thirdPlaceTrophy; break;\n            default: image = firstPlaceTrophy; break;\n        }\n        return <img style={imageStyle} alt=\"trophyImage\" src={image} />\n    }\n    return <div style={{\n        textAlign: \"center\"\n    }}>\n        {getImage()}\n        <Header style={{display:\"block\"}} white size={5}>{player.gamertag}</Header>\n        <Header style={{display:\"block\"}} white size={3}><strong>{player.points}</strong></Header>\n    </div>\n}\n\nexport default StandingsTrophy","import React from 'react'\n\nimport { Grid, Button } from '@material-ui/core/'\nimport Header from '../../../components/UI/Header'\nimport StandingsTrophy from './StandingsTrophy'\n\nconst GameEndInfoBox = (props) => {\n    const { firstPlace, secondPlace, thirdPlace } = props\n    return (\n            <Grid container>\n                <Grid item xs={12} style={{textAlign:\"center\", marginTop: 30, marginBottom: 30 }}>\n                    <Header white size={3}>Game End Results</Header>\n                </Grid>\n                <Grid item xs={12}>\n                    <StandingsTrophy player={firstPlace} standing={1}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={6}>{props.secondPlace ? <StandingsTrophy player={secondPlace} standing={2}/> : null}</Grid>\n                        <Grid item xs={6}>{props.thirdPlace ? <StandingsTrophy player={thirdPlace} standing={3}/> : null}</Grid>\n                    </Grid>\n                </Grid>\n                <Grid style={{textAlign: \"center\", margin: \"20px 0\"}} item xs={12}><Button variant=\"outlined\" size=\"large\" style={{color: \"#fff\", border: \"1px solid #fff\"}} onClick={() => window.location.reload()}>Return to Main Menu</Button></Grid>\n            </Grid>\n    )\n}\n\nexport default GameEndInfoBox\n","import React from 'react'\nimport { ListItem, ListItemIcon, ListItemText, Avatar, Chip } from '@material-ui/core/'\nimport { Face } from '@material-ui/icons/'\n\nconst GameEndPlayer = ({ gamertag, isCurrentPlayer, rank, points }) => {\n    return <ListItem divider>\n    {\n        <ListItemIcon>\n            { isCurrentPlayer ? <Face/> \n            : <Avatar style={{\n                width: 24,\n                height: 24,\n            }}>{rank}</Avatar> \n            }\n        </ListItemIcon>\n    }\n    <ListItemText \n        disableTypography={true}\n        component=\"div\"\n        primary={<div style={{display: 'flex'}}>\n            <span style={{\n                margin: \"0 20px 0 0\",\n                paddingRight: 5,\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n            }}>{gamertag}</span>\n            <span style={{marginLeft: 'auto'}}>\n                <Chip\n                    component=\"span\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    label={points + \" points\"}\n                />\n            </span>\n            \n        </div>} \n    />  \n    </ListItem>\n}\nexport default GameEndPlayer","import React from 'react'\nimport { List } from '@material-ui/core'\nimport GameEndPlayer from './GameEndPlayer'\n\n\nconst GameEndPlayerList = ({ players, gamertag }) => {\n    \n    return <List>\n        {\n            players\n            .sort((a, b) => b.points - a.points)\n            .slice(3)\n            .map((player, i) => <GameEndPlayer \n                key={i}\n                rank={i + 4} \n                isCurrentPlayer={gamertag === player.gamertag} \n                points={player.points} \n                gamertag={player.gamertag}/>\n            )    \n        }\n    </List>\n}\n\nexport default GameEndPlayerList","import React from 'react'\nimport { Grid, withStyles, Container, makeStyles } from '@material-ui/core/'\nimport GameEndInfoBox from './components/GameEndInfoBox'\nimport GameEndPlayerList from \"./components/GameEndPlayerList\"\n\nconst CustomGridItem = withStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            height: 'auto'\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '100%'\n        }\n    },\n}))(Grid)\n\nconst GameEnd = ({ gamertag, players }) => {\n    document.title = `Winner is ${players[0].gamertag}!`\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        standings: {\n            textAlign: 'center',\n        },\n        gridTest: {\n            [theme.breakpoints.down('sm')]: {\n                marginTop: '50px'\n            },\n            [theme.breakpoints.up('md')]: {\n                marginTop: '80px'\n            }\n        },\n    }))\n    const classes = useStyles()\n    return players.length > 3 ? <Grid container style={{ height: '100%' }}>\n                <CustomGridItem style={{ backgroundColor: \"#879DFA\", color: '#ffffff' }} item xs={12} md={7}>\n                    <Container textAlign=\"center\" maxWidth=\"xs\" className={classes.gridTest}>\n                        <GameEndInfoBox\n                            firstPlace={players[0]}\n                            secondPlace={players.length > 1 ? players[1] : null}\n                            thirdPlace={players.length > 2 ? players[2] : null} />\n                    </Container>\n                </CustomGridItem>\n                <CustomGridItem item xs={12} md={5}>\n                    <Container maxWidth=\"xs\" className={classes.gridTest}>\n                        <GameEndPlayerList players={players} gamertag={gamertag}/>\n                    </Container>\n                </CustomGridItem>\n            </Grid> :\n                <Grid container style={{ height: '100%' }}>\n                    <CustomGridItem style={{ backgroundColor: \"#879DFA\", color: '#ffffff' }} item xs={12}>\n                        <Container textAlign=\"center\" maxWidth=\"xs\" className={classes.gridTest}>\n                            <GameEndInfoBox\n                                firstPlace={players[0]}\n                                secondPlace={players.length > 1 ? players[1] : null}\n                                thirdPlace={players.length > 2 ? players[2] : null} />\n                        </Container>\n                    </CustomGridItem>\n                </Grid>\n}\n\nexport default GameEnd\n","import React from 'react'\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core/'\nimport { Face, Done } from '@material-ui/icons/'\n\nconst Player = ({ gamertag, isCurrentPlayer, lobbyReady }) => {\n    return <ListItem divider>\n        { isCurrentPlayer ? \n            <ListItemIcon>\n                <Face />\n            </ListItemIcon> \n        : '' }\n        <ListItemText \n            disableTypography={true}\n            inset={!isCurrentPlayer} \n            primary={<span \n                style={{\n                    margin: \"0 20px 0 0\",\n                    paddingRight: 5,\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    display: 'block'\n                }}>\n                {gamertag}\n            </span>}\n        />\n        <ListItemIcon>\n            <Done style={\n                lobbyReady ? { color: \"#2ECC40\" } : { color: \"#ccc\", opacity: \"0.5\"} \n            }/>\n        </ListItemIcon>\n    </ListItem>\n}\n\nexport default Player","import React from 'react'\nimport { List } from '@material-ui/core'\nimport Player from './Player'\n\nconst PlayerList = ({ gamertag, players }) => {\n    return <List>\n        {\n            players.map(player => <Player \n                key={player.id} \n                gamertag={player.gamertag} \n                isCurrentPlayer={gamertag === player.gamertag}\n                lobbyReady={player.lobbyReady} \n            />)\n        }\n    </List>\n}\n\nexport default PlayerList","import React from 'react'\nimport { Grid, Container, Button, makeStyles } from '@material-ui/core/'\nimport { PlayCircleFilled, DoneOutline } from '@material-ui/icons/'\nimport PlayerList from \"./components/PlayerList\"\nimport BlueDivider from \"../../components/UI/BlueDivider\"\nimport Header from \"../../components/UI/Header\"\nimport Timer from \"../../components/UI/Timer\"\n\nconst Lobby = ({ gamertag, players, timer, roomCode, startGame, started, isCreator, setPlayerReadyLobby, chat, gameType }) => {\n    document.title = started ? 'Game Is Starting!' : 'Game Lobby'\n    const useStyles = makeStyles((theme) => ({\n        button: {\n            marginRight: theme.spacing(1),\n            marginBottom: theme.spacing(1)\n        }\n    }))\n    const classes = useStyles()\n\n    let TimerWrapper = () => <Grid item xs={12} style={{marginTop: 25, marginBottom: 50}}>\n                            <Container>\n                                <Timer color={\"#a3b4ff\"} timeRemaining={timer} />\n                            </Container>\n                        </Grid>\n\n    if(gameType === \"quick\"){\n        return <Grid container style={{height: '100%'}} alignItems='center' justify='center'>\n                <Grid item style={{textAlign:\"center\"}}>\n                    <Header size={1}>The game is starting in...</Header>\n                    <TimerWrapper/>\n                </Grid>\n        </Grid>\n    } else {\n        return <Grid container>\n        <BlueDivider textCenter>{roomCode}</BlueDivider>\n        { \n            started ? <TimerWrapper/> : null\n        }  \n        <Grid item xs={12}>\n            <Container>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <Grid container>\n                                    <Grid item xs={12}>\n                                        <Header size={5}>Players in the lobby</Header>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <PlayerList gamertag={gamertag} players={players} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {\n                                !started ? <Grid item xs={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={players.find(p => p.gamertag === gamertag).lobbyReady}\n                                        className={classes.button}\n                                        onClick={setPlayerReadyLobby}\n                                        startIcon={<DoneOutline />}\n                                    >I'm Ready To Play</Button>\n                                    {\n                                        isCreator && !started ? <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        onClick={startGame}\n                                        startIcon={<PlayCircleFilled />}>Start Game</Button> : ''\n                                    }\n                                </Grid> : ''\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Grid container>              \n                            <Grid item xs={12}>\n                                <Header size={5}>Chat</Header>\n                            </Grid>\n                            <Grid item xs={12}>\n                                {chat}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grid>\n    </Grid>\n    }\n\n    \n}\n\nexport default Lobby","import React, { useState } from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core/'\nimport { Send } from '@material-ui/icons/'\n\nconst ChatTextField = ({ sendMessage }) => {\n    const [message, setMessage] = useState(\"\")\n    function handleClick(message) {\n        if(message !== \"\") {\n            sendMessage(message)\n            setMessage(\"\")\n        }\n    }\n    return <Grid container>\n        <Grid item xs={12}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField value={message} label=\"Send Message\" variant=\"outlined\" size={'small'} fullWidth multiline onChange={e => setMessage(e.target.value)} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleClick(message)}\n                        endIcon={<Send />}\n                    >\n                        Send\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    </Grid>\n}\n\nexport default ChatTextField","import React from 'react'\nimport { Box, Typography, Card, CardContent } from '@material-ui/core/'\n\nconst Message = ({ gamertag, message }) => {\n    const ownMessage = gamertag === message.gamertag\n    const style = ownMessage ? \"own\" : \"other\"\n    return <Box className=\"message\" align={ownMessage ? \"right\" : \"left\"}>\n        <Card style={{display: 'inline-block', width: 'fit-content'}}>\n            <CardContent className={style.concat(\" messageCard\")} style={{padding: \"4px 6px\"}}>\n                <Typography color=\"textSecondary\" gutterBottom style={{fontSize:12}} align={ownMessage ? \"right\" : \"left\"}>\n                    {ownMessage ? \"You\": message.gamertag}\n                </Typography>\n                <Typography gutterBottom className=\"messageText\" >\n                    {message.message}\n                </Typography>\n            </CardContent>\n        </Card>\n    </Box>\n}\n\nexport default Message","import React, { useState, useEffect } from 'react'\nimport { Box, Container } from '@material-ui/core/'\nimport ChatTextField from \"./ChatTextField\"\nimport Message from \"./Message\"\n\nconst Chat = ({ gamertag, socket, sendMessage }) => {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        let mounted = true\n        socket.on(\"send messages\", messages => {\n            if(mounted) {\n                setMessages(messages)\n                let chatBoxElement = document.getElementsByClassName('chatBox')[0]\n                chatBoxElement.scrollTo(0, chatBoxElement.scrollHeight)\n            }\n        })\n        return () => mounted = false\n    }, [])\n\n    let messageComponents = messages.map((message, i) => {\n        return <Message key={i} gamertag={gamertag} message={message} />\n    })\n\n    return <Container disableGutters>\n        <Box>\n            <Container disableGutters className=\"chatBox\">\n                { messageComponents }\n            </Container>\n        </Box>\n        <Box>\n            <ChatTextField sendMessage={sendMessage} />\n        </Box>\n    </Container>\n}\n\nexport default Chat","import React, { useEffect, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport QuestionScreen from './QuestionPage/Index'\nimport RoundEndScreen from './RoundEndPage/Index'\nimport GameEndScreen from './GameEndPage/Index'\nimport LobbyScreen from './LobbyPage/Index'\nimport Chat from '../components/UI/Chat/Chat'\n\nconst Game = ({getGame, socket, gamertag }) => {\n    const [game, setGame] = useState(getGame())\n    const [answer, setAnswer] = useState(\"\")\n    const [correctAnswer, setCorrectAnswer] = useState({})\n\n    useEffect(() => {\n        socket.on(\"send players\", players => {\n            setGame(prevState => ({...prevState, players: players}))\n        })\n        socket.on(\"send timer\", timer => {\n            let timerName = Object.keys(timer)[0];\n            setGame(prevState => ({...prevState, [timerName]: timer[timerName]}))\n        })\n        socket.on(\"update game view\", view => {\n            setGame(prevState => ({...prevState, view: view}))\n        })\n        socket.on('reset timers', data => {\n            setGame(prevState => ({...prevState, questionCounter: data.questionCounter, roundEndCounter: data.roundEndCounter}))\n        })\n        socket.on(\"get correct answer\", data => {\n            setCorrectAnswer(data)\n        })\n        socket.on(\"gamertag taken\", data => {\n            //setGamertag(data)\n            //setJoiningState(false)\n            window.alert(`Gamertag '${data} is already taken!'`)\n        })\n        socket.on(\"send question\", data => {\n            setGame(prevState => ({...prevState, question: data.nextQuestion, currentQuestionIndex: data.questionIndex}))\n        })\n        socket.on(\"game started\", () => {\n            setGame(prevState => ({...prevState, started: true}))\n        })\n    }, [])\n    \n    function setAnswerAndPlayerReady() {\n        socket.emit(\"set ready\", { game_id: game.id, gamertag, answer, question_id: game.question.id }) \n    }\n\n    function setPlayerReadyLobby() {\n        socket.emit(\"set lobby ready\", { game_id: game.id, gamertag: gamertag })\n    }\n\n    function startGame() {\n        socket.emit(\"start game\", { game_id: game.id })\n    }\n    \n    function getPlayersAnswers() {\n        let answers = {}\n        game.players.forEach(p => {\n            let answeredThisRound = false\n            p.answers.forEach(a => {\n                if(a.question_id === game.question.id) {\n                    answers[p.gamertag] = a.answer\n                    answeredThisRound = true\n                }\n            })\n            if(!answeredThisRound){\n                answers[p.gamertag] = {noAnswer: true}\n            }\n        })\n        return answers\n    }\n\n    function sendMessage(message) {\n        socket.emit(\"send lobby message\", {gamertag: gamertag, message: message, game_id: game.id})\n    }\n    function getPage() {\n        switch(game.view) {\n            case 1: return <LobbyScreen\n                gameType={game.type}\n                players={game.players} \n                gamertag={gamertag} \n                timer={game.startGameCounter}\n                roomCode={game.roomCode} \n                startGame={startGame}\n                started={game.started}\n                isCreator={game.creator}\n                setPlayerReadyLobby={setPlayerReadyLobby}\n                chat={<Chat socket={socket} gamertag={gamertag} sendMessage={sendMessage}/>}\n            />\n            case 2: return <QuestionScreen\n                questionIndex={game.currentQuestionIndex}\n                questionCount={game.numberOfQuestions} \n                setAnswer={setAnswer} \n                timer={game.questionCounter} \n                question={game.question}\n                players={game.players}\n                setReady={setAnswerAndPlayerReady}\n            />\n            case 3: return <RoundEndScreen \n                players={game.players}   \n                answers={getPlayersAnswers()} \n                gamertag={gamertag} \n                timer={game.roundEndCounter} \n                correctAnswer={correctAnswer} \n            />\n            case 4: return <GameEndScreen \n                players={game.players} \n                gamertag={gamertag} \n            />\n            default: return <Button onClick={() => window.location.reload()}>Reload</Button>\n        }\n    }\n    return getPage()\n}\nexport default Game","import React, { useState, useEffect } from 'react'\nimport { Container, IconButton, makeStyles } from '@material-ui/core/'\nimport { ArrowBack } from '@material-ui/icons/'\nimport MyDrawer from './components/UI/MyDrawer' \nimport NavBar from './components/UI/NavBar'\nimport MainMenu from './views/MainMenu'\nimport Game from './views/Game'\nimport '../src/style.css'\nimport io from 'socket.io-client'\n\nconst socket = io(process.env.REACT_APP_SOCKET_URL || 'localhost:3001')\n\nfunction App() {\n    const [game, setGame] = useState({})\n    const [showBackButton, setShowBackButton] = useState(false)\n    const [openStatus, setOpenStatus] = useState(false)\n    const [showGame, toggleGame] = useState(false)\n    const [pageTitle, setPageTitle] = useState('Welcome to WikiVisa')\n    const [view, setView] = useState('play')\n    const [gamertag, setGamertag] = useState(localStorage.getItem(\"gamertag\") || '')\n\n    useEffect(() => {\n        socket.on(\"send game\", game => {\n            setGame(game)\n            toggleGame(!showGame)\n        })\n        socket.on(\"send gamertag\", data => {\n            setGamertag(data)\n        })\n    }, [])\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n            height: '100%'\n        },\n        backPageButton: {\n            marginRight: theme.spacing(2)\n        },\n        toolbar: theme.mixins.toolbar,\n        button: {\n            margin: theme.spacing(1)\n        }\n    }))\n\n    const classes = useStyles()\n\n    function getGame() {\n        return game\n    }\n\n    function getPage() {\n        switch(showGame) {\n            case true: return <Game getGame={getGame} socket={socket} gamertag={gamertag}/>\n            default: return <MainMenu\n                setShowBackButton={setShowBackButton}\n                socket={socket}\n                toggleGame={toggleGame}\n                view={view}\n                setView={setView}\n                gamertag={gamertag}\n                setGamertag={setGamertag}\n            />\n        }\n    }\n\n    return <div className={classes.root}>\n        { showGame ? '' : \n        <NavBar title={pageTitle} toggle={() => setOpenStatus(!openStatus)} previousButton={\n            showBackButton ? <IconButton\n                color=\"inherit\"\n                aria-label=\"Go Back To Previous Page\"\n                edge=\"start\"\n                onClick={() => setView('play')} \n                className={classes.backPageButton}>\n                <ArrowBack />\n            </IconButton> : ''\n        } /> }\n        { showGame ? '' : <MyDrawer view={view} setOpenStatus={setOpenStatus} setView={setView} openStatus={openStatus} /> }\n        <Container maxWidth={false} style={{padding: 0}} disableGutters>\n            { showGame ? '' : <div className={classes.toolbar}></div> }\n            { getPage() }\n        </Container>\n    </div>\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/firstPlace.67dac025.svg\";","module.exports = __webpack_public_path__ + \"static/media/wikipedia_white_logo.dfd7f090.png\";","module.exports = __webpack_public_path__ + \"static/media/secondPlace.3087e0e9.svg\";"],"sourceRoot":""}